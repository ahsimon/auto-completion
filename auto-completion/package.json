{
  "name": "auto-completion",
  "displayName": "auto-completion",
  "description": "testing auto-completion",
  "version": "0.0.1",
  "engines": {
    "vscode": "^1.94.0"
  },
  "categories": [
    "Other"
  ],
  "activationEvents": [],
  "main": "./dist/extension.js",
  "contributes": {
    "commands": [
      {
        "command": "auto-complete.on",
        "title": "Hello World"
      }
    ],
    "configuration": {
      "title": "twinny",
      "properties": {
        "twinny.enabled": {
          "order": 0,
          "type": "boolean",
          "default": true,
          "markdownDescription": "Toggles the Twinny extension on or off. When `true`, Twinny is active and ready to provide completions."
        },
        "twinny.enabledLanguages": {
          "order": 1,
          "type": "object",
          "additionalProperties": {
            "type": "boolean"
          },
          "default": {
            "*": true
          },
          "markdownDescription": "Specifies which languages to enable completions with Twinny for. Use `*` as the default for all languages. Example:\n```json\n{\n  \"*\": true,\n  \"python\": true,\n  \"javascript\": false\n}\n```"
        },
        "twinny.locale": {
          "order": 2,
          "type": "string",
          "enum": [
            "en",
            "zh-CN",
            "zh-HK"
          ],
          "enumDescriptions": [
            "English",
            "Chinese (Simplified)",
            "Chinese (Hong Kong)"
          ],
          "default": "en",
          "markdownDescription": "Sets the locale for Twinny. The default is `en` (English)."
        },
        "twinny.autoSuggestEnabled": {
          "order": 3,
          "type": "boolean",
          "default": true,
          "markdownDescription": "When `true`, Twinny will automatically suggest completions. You can still manually trigger completions using the default shortcut (`Alt+\\`)."
        },
        "twinny.contextLength": {
          "order": 4,
          "type": "number",
          "default": 100,
          "markdownDescription": "Specifies how many lines of context (before and after the current line) to include in Fill-in-Middle (FIM) prompts. A higher number provides more context but may slow down completions.",
          "required": true
        },
        "twinny.debounceWait": {
          "order": 5,
          "type": "number",
          "default": 300,
          "markdownDescription": "Sets the delay (in milliseconds) before triggering the next completion. This helps reduce API calls and improve performance.",
          "required": true
        },
        "twinny.temperature": {
          "order": 6,
          "type": "number",
          "default": 0.2,
          "markdownDescription": "Controls the randomness of the model's output. Lower values (e.g., 0.2) produce more focused and deterministic outputs, while higher values (e.g., 0.8) lead to more diverse and creative completions.",
          "required": true
        },
        "twinny.multilineCompletionsEnabled": {
          "order": 7,
          "type": "boolean",
          "default": true,
          "markdownDescription": "When `true`, Twinny will attempt to generate multi-line completions. This is an experimental feature and may not work perfectly in all scenarios."
        },
        "twinny.maxLines": {
          "dependencies": {
            "twinny.multilineCompletionsEnabled": true
          },
          "order": 8,
          "type": "number",
          "default": 30,
          "markdownDescription": "Sets the maximum number of lines for multi-line completions. Only applies when `twinny.multilineCompletionsEnabled` is `true`."
        },
        "twinny.fileContextEnabled": {
          "order": 9,
          "type": "boolean",
          "default": false,
          "markdownDescription": "When `true`, Twinny will scan neighboring documents to provide more context for completions. This is an experimental feature and may impact performance."
        },
        "twinny.completionCacheEnabled": {
          "order": 10,
          "type": "boolean",
          "default": false,
          "markdownDescription": "Enables caching of Fill-in-Middle (FIM) completions for identical prompts. This can significantly improve performance but may use more memory."
        },
        "twinny.numPredictChat": {
          "order": 11,
          "type": "number",
          "default": 512,
          "markdownDescription": "Sets the maximum number of tokens to generate for chat completions. Higher values allow for longer completions but may increase response time.",
          "required": true
        },
        "twinny.numPredictFim": {
          "order": 12,
          "type": "number",
          "default": 512,
          "markdownDescription": "Defines the maximum number of tokens for Fill-in-Middle (FIM) completions. Use `-1` for no limit. Twinny will attempt to stop at logical line breaks regardless of this setting.",
          "required": true
        },
        "twinny.enableSubsequentCompletions": {
          "order": 13,
          "type": "boolean",
          "default": true,
          "markdownDescription": "When `true`, Twinny will continue to make completion requests to the API after the previous completion was accepted. This can provide a more fluid completion experience."
        },
        "twinny.embeddingIgnoredGlobs": {
          "order": 14,
          "type": "array",
          "default": [],
          "markdownDescription": "Specifies file patterns to ignore when calculating embeddings, such as `**/*.md`, `**/node_modules/**`."
        },
        "twinny.ollamaHostname": {
          "order": 15,
          "type": "string",
          "default": "0.0.0.0",
          "markdownDescription": "Specifies the hostname for the Ollama API. Use `0.0.0.0` for localhost or provide a specific IP address or domain name.",
          "required": true
        },
        "twinny.ollamaApiPort": {
          "order": 16,
          "type": [
            "number",
            "null"
          ],
          "default": 11434,
          "markdownDescription": "Sets the port number for the Ollama API. The default is `11434`, but you can change it if your Ollama instance uses a different port.",
          "required": false
        },
        "twinny.keepAlive": {
          "order": 17,
          "type": "string",
          "default": "5m",
          "markdownDescription": "Sets the duration to keep models in memory for Ollama API. Use formats like `5m` for 5 minutes or `1h` for 1 hour. Set to `-1` to keep models in memory indefinitely."
        },
        "twinny.ollamaUseTls": {
          "order": 18,
          "type": "boolean",
          "default": false,
          "markdownDescription": "When `true`, Twinny will use TLS encryption for connections to the Ollama API. Ensure your Ollama instance is configured for TLS before enabling this option."
        },
        "twinny.enableLogging": {
          "order": 19,
          "type": "boolean",
          "default": true,
          "markdownDescription": "Activates debug logging for Twinny. When `true`, Twinny will output detailed logs, which can be helpful for troubleshooting."
        },
        "twinny.symmetryServerKey": {
          "order": 20,
          "type": "string",
          "markdownDescription": "Sets the symmetry master server key. Default value is provided for twinny's Symmetry server.",
          "default": "4b4a9cc325d134dee6679e9407420023531fd7e96c563f6c5d00fd5549b77435"
        },
        "twinny.githubToken": {
          "order": 21,
          "type": "string",
          "default": "",
          "markdownDescription": "Your personal GitHub access token. This is used for fetching data from GitHub repositories. Keep this token secure and do not share it."
        }
      }
    }
  },
  "scripts": {
    "vscode:prepublish": "npm run package",
    "compile": "npm run check-types && npm run lint && node esbuild.js",
    "watch": "npm-run-all -p watch:*",
    "watch:esbuild": "node esbuild.js --watch",
    "watch:tsc": "tsc --noEmit noEmitOnError --watch --project tsconfig.json",
    "package": "npm run check-types && npm run lint && node esbuild.js --production",
    "compile-tests": "tsc -p . --outDir out",
    "watch-tests": "tsc -p . -w --outDir out",
    "pretest": "npm run compile-tests && npm run compile && npm run lint",
    "check-types": "tsc --build --clean --noEmit",
    "lint": "eslint src",
    "test": "vscode-test"
  },
  "devDependencies": {
    "@types/mocha": "^10.0.9",
    "@types/node": "20.x",
    "@types/vscode": "^1.96.0",
    "@typescript-eslint/eslint-plugin": "^8.10.0",
    "@typescript-eslint/parser": "^8.7.0",
    "@vscode/test-cli": "^0.0.10",
    "@vscode/test-electron": "^2.4.1",
    "esbuild": "^0.24.0",
    "eslint": "^9.13.0",
    "npm-run-all": "^4.1.5",
    "tree-sitter-cli": "^0.24.5",
    "typescript": "^5.6.3"
  },
  "dependencies": {
    "async-lock": "^1.4.1",
    "handlebars": "^4.7.8",
    "string_score": "^0.1.22",
    "symmetry-core": "^1.0.33",
    "tree-sitter-wasms": "^0.1.12",
    "uuid": "^11.0.3",
    "web-tree-sitter": "^0.24.5"
  }
}
